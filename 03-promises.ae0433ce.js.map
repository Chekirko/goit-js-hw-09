{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,MAAOC,SAASC,cAAc,qBAC9BC,KAAMF,SAASC,cAAc,oBAC7BE,OAAQH,SAASC,cAAc,sBAC/BG,KAAMJ,SAASC,cAAc,UAyB/B,SAASI,EAAcC,EAAUP,GAC/B,MAAMQ,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,uBAAqBL,QAAiBP,OAE5Ca,EAAK,sBAAoBN,QAAeP,SAE3CA,MA/BPD,EAAKM,KAAKU,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMC,EAAanB,EAAKK,OAAOe,MACzBC,EAAYrB,EAAKC,MAAMmB,MACvBE,EAAWtB,EAAKI,KAAKgB,MAC3B,IAAIG,EAAWC,OAAOH,GACtB,IAAK,IAAII,EAAI,EAAGA,GAAKN,EAAYM,GAAK,EAAG,CAEvClB,EADiBkB,EACOF,GACrBG,MAAKC,IACJC,EAAA9B,GAAS+B,OAAOC,QAAQ,GAAGH,QAE5BI,OAAMC,IACLJ,EAAA9B,GAAS+B,OAAOI,QAAQ,GAAGD,QAE/BT,GAAYC,OAAOF,GAErBL,EAAIiB,OAAOC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delay: document.querySelector('input[name=delay]'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const userAmount = refs.amount.value;\n  const userDelay = refs.delay.value;\n  const userStep = refs.step.value;\n  let newDelay = Number(userDelay);\n  for (let i = 1; i <= userAmount; i += 1) {\n    const position = i;\n    createPromise(position, newDelay)\n      .then(result => {\n        Notiflix.Notify.success(`${result}`);\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(`${error}`);\n      });\n    newDelay += Number(userStep);\n  }\n  evt.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","delay","document","querySelector","step","amount","form","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","userAmount","value","userDelay","userStep","newDelay","Number","i","then","result","$parcel$interopDefault","Notify","success","catch","error","failure","target","reset"],"version":3,"file":"03-promises.ae0433ce.js.map"}